{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","messageElement","document","createElement","classList","add","textContent","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACE,UAAUF,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SACtCL,MAAAA,OAAAA,OAAAA,EAAQM,GAFZ,UAQb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAiBC,SAASC,cAAc,OAE9CF,EAAeG,UAAUC,IAAI,WAE7BJ,EAAeK,YAAcN,EAC7BE,SAASK,KAAKC,YAAYP,IAG5BQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.371f9049.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} on the element: ${element.nodeName}, `\n        + `id: ${element.id}.`\n      );\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const messageElement = document.createElement('div');\n\n  messageElement.classList.add('message');\n\n  messageElement.textContent = message;\n  document.body.appendChild(messageElement);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}